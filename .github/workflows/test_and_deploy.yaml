name: Run tests and, if successful, deploy to PyPI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements_dev.txt
          python -m pip install -e .
      - name: flake8
        run: flake8 src
      - name: Unit tests
        run: python -m pytest --doctest-modules src/osmg/

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Check the current version on PyPi
        id: version_step_pypi
        run: |
          python -m pip install osmg --upgrade
          latest=$(pip show osmg | grep 'Version:' | awk '{print $2}')
          echo "Latest Version found on PyPi: $latest"
          echo "::set-output name=latest_version::$latest"
      - name: Check the current version on setup.cfg
        id: version_step_setupcfg
        run: |
            version=$(grep '^version' setup.cfg | awk -F= '{print $2}' | tr -d '[:space:]')
            echo "Version found in setup.cfg: $version"
            echo "::set-output name=setupcfg_version::$version"
      - name: Prepare package
        run: |
            python -m pip install --upgrade pip setuptools wheel twine
            python setup.py sdist bdist_wheel
            python -m twine check dist/*
      - uses: actions/upload-artifact@v3
        with:
            name: dist
            path: dist
      - name: Deploy
        if: ${{ steps.version_step_pypi.outputs.latest_version != steps.version_step_setupcfg.outputs.setupcfg_version }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
